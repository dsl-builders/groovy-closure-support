buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }
}


version = '0.5.2'

apply plugin: 'groovy'
apply plugin: 'checkstyle'
apply plugin: 'codenarc'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group = 'space.jasan'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
   jcenter()
}

String groovyVersion = System.getenv("GROOVY_VERSION") ?: '2.5.10'

dependencies {
    compileOnly group: 'org.codehaus.groovy', name: 'groovy', version: groovyVersion
    testCompile group: 'org.codehaus.groovy', name: 'groovy', version: groovyVersion
    testCompile "org.spockframework:spock-core:${getSpockClassifier(groovyVersion)}"
}

bintray {
  user = getPropertyOrUseDefault('bintrayUser', 'fake_user')
  key = getPropertyOrUseDefault('bintrayKey', 'fake_key')

  publications = ['nebula']
  dryRun = false
  publish = true
  pkg {
    repo = 'space'
    userOrg = 'jasan'
    name = project.name
    desc = project.description
    websiteUrl = 'https://github.com/jasanspace/${project.name}'
    issueTrackerUrl = 'https://github.com/jasanspace/${project.name}/issues'
    vcsUrl = 'https://github.com/jasanspace/${project.name}.git'
    licenses = ['Apache-2.0']
    labels = ['groovy', 'closure', 'lambda']
    publicDownloadNumbers = true
    attributes = [:]
    version {
      name = project.version
      vcsTag = project.version
      attributes = [:]
    }
  }
}

jar {
    manifest.attributes provider: 'gradle'
}

publishing {
    publications {
        nebula(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}


String getPropertyOrUseDefault(String propertyName, String defaultValue) {
    hasProperty(propertyName) ? getProperty(propertyName) : defaultValue
}

String getSpockClassifier(String groovyVersion) {
    if (groovyVersion.startsWith('2.5')) {
        return '1.2-groovy-2.5'
    }
    if (groovyVersion.startsWith('2.4')) {
        return '1.0-groovy-2.4'
    }
    if (groovyVersion.startsWith('2.3')) {
        return '1.0-groovy-2.3'
    }
    return '1.0-groovy-2.0'
}
